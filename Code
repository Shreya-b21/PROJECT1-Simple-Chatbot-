# chatbot.py

class Chatbot:
    def __init__(self):
        self.user_context = {}

    def greet_user(self):
        return "Hello! How can I help you today?"

    def farewell_user(self):
        return "Goodbye! Have a great day!"

    def respond_to_basic_questions(self, user_input):
        responses = {
            "how are you?": "I'm a bot, so I'm always good! How about you?",
            "what is your name?": "I'm your friendly chatbot.",
            "what can you do?": "I can chat with you and answer simple questions.",
            "tell me a joke.": "Why don't scientists trust atoms? Because they make up everything!",
            "what's the weather like?": "I can't check the weather right now, but you can check your local forecast."
        }
        return responses.get(user_input.lower(), "I'm not sure how to respond to that.")

    def remember_context(self, user_id, message):
        if user_id not in self.user_context:
            self.user_context[user_id] = []
        self.user_context[user_id].append(message)

    def recall_context(self, user_id):
        return self.user_context.get(user_id, [])

    def handle_error(self):
        return "I'm sorry, I didn't understand that. Can you please rephrase?"

    def respond(self, user_id, user_input):
        self.remember_context(user_id, user_input)
        response = self.respond_to_basic_questions(user_input)
        if response == "I'm not sure how to respond to that.":
            return self.handle_error()
        return response

    def ask_question(self, question_index):
        questions = [
            "What's your name?",
            "How can I assist you today?",
            "Do you need help with anything else?"
        ]
        if question_index < len(questions):
            return questions[question_index]
        return "Thanks for chatting with me!"

    def handle_user_response(self, user_id, response, question_index):
        self.remember_context(user_id, response)
        return self.ask_question(question_index + 1)

# Sample interaction with the chatbot

if __name__ == "__main__":
    chatbot = Chatbot()
    user_id = "user1"
    question_index = 0

    print("Chatbot:", chatbot.greet_user())

    while True:
        user_input = input("You: ")
        if user_input.lower() in ["bye", "exit", "quit"]:
            print("Chatbot:", chatbot.farewell_user())
            break
        elif question_index < 3:
            print("Chatbot:", chatbot.ask_question(question_index))
            question_index += 1
        else:
            print("Chatbot:", chatbot.respond(user_id, user_input))
